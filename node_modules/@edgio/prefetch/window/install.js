"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const prefetch_1 = require("./prefetch");
const registerServiceWorker_1 = require("./registerServiceWorker");
const watchElements_1 = __importDefault(require("./watchElements"));
const listenForSwMessages_1 = __importDefault(require("./listenForSwMessages"));
// The following was removed for the 7.x release because we removed support for cache-manifest.js
// import watchLinks from './watchLinks'
// import loadManifest from './loadManifest'
// import CacheManifest, { CacheManifestEntry } from '@edgio/core/router/CacheManifest'
const defaults = {
    includeCacheMisses: false,
    cacheHost: undefined,
    forcePrefetchRatio: 0,
};
/**
 * Installs the service worker, prefetches any URLs specified in `prefetchURLs` and watches
 * all links whose `href` attribute matches one of the specified `prefetchPatterns`.  When
 * a matching link is visible in the viewport, the destination URL will be prefetched and
 * added to the cache.
 * @param options
 */
async function install(options) {
    options = { ...defaults, ...options };
    const { serviceWorker } = navigator;
    if (typeof serviceWorker === 'undefined') {
        return;
    }
    const { prefetchURLs, watch, serviceWorkerPath = '/service-worker.js' /*, observe*/ } = options;
    // The following was removed for the 7.x release because we removed support for cache-manifest.js
    // await loadManifest({ cacheHost: options.cacheHost })
    // const cacheManifest: CacheManifest = CacheManifest.fromEntries(
    //   // @ts-ignore
    //   window.__EDGIO_CACHE_MANIFEST__ || []
    // )
    // const prefetchPatterns: CacheManifestEntry[] = [...(options.prefetchPatterns || [])].map(
    //   routeRegex => ({
    //     criteriaPath: routeRegex.source,
    //     route: routeRegex.source,
    //     cacheOptions: { edge: { maxAgeSeconds: 1 }, browser: { serviceWorkerSeconds: 1 } },
    //     returnsResponse: false,
    //   })
    // )
    // spaRoutes.push(...cacheManifest.spaRoutes)
    (0, prefetch_1.configure)({ ...options });
    // install the service worker
    (0, registerServiceWorker_1.registerServiceWorker)(serviceWorkerPath);
    // prefetch requested URLs
    prefetchURLs === null || prefetchURLs === void 0 ? void 0 : prefetchURLs.forEach(url => (0, prefetch_1.prefetch)(url));
    // The following was removed for the 7.x release because we removed support for cache-manifest.js
    // watch links currently in the DOM as well as any links that are added in the future
    // watchLinks(cacheManifest, observe) // observer options only needs supplied to the first call since this creates the MutationObserver
    // watchLinks(CacheManifest.fromEntries(prefetchPatterns))
    (0, watchElements_1.default)(watch);
    (0, listenForSwMessages_1.default)();
}
exports.default = install;
